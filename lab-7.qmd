---
title: "Lab 7"
author: "Sydney, Lucas, Jose"
format: html
editor: visual
---

# Set up

```{r}
#| label: packages
#| message: false

library(tidyverse)
library(repurrrsive)
library(jsonlite)
library(dplyr)
library(purrr)
library(tidyjson)
library(httr)
library(glue)
library(leaflet)
library(htmltools)
```

# Question 1

```{r}
# read in capital lat and long
capitals <- read.table("https://people.sc.fsu.edu/~jburkardt/datasets/states/state_capitals_ll.txt", col.names = c("State", "Lat", "Long"))

# read in capital names
capital_names <- read.table("https://people.sc.fsu.edu/~jburkardt/datasets/states/state_capitals_name.txt", col.names = c("State", "Capital"))

# merge df's
capitals <- capitals |>
  left_join(capital_names, by = "State")


# function for getting pass times
pass_times <- function(capitals_df) {
  
  get_passes <- function(state, capital, lat, lon) {
    res <- GET(
      glue("https://api.g7vrd.co.uk/v1/satellite-passes/25544/{lat}/{lon}.json"),
      query = list(hours = 72, minelevation = 30)
    )
    
    data <- fromJSON(rawToChar(res$content))
    
    # get first 3 pass times
    passes <- data$passes %>%
      head(3)
    
    # create tibble 
    tibble(
      State = state,
      Capital = capital,
      Latitude = lat,
      Longitude = lon,
      PassTime = ymd_hms(str_remove(as.character(passes$start), "Z")),
      PassNumber = seq.int(nrow(passes))
    )
  }
  
  # apply function to capitals df
  result <- pmap_dfr(
    list(capitals_df$State, capitals_df$Capital, capitals_df$Lat, capitals_df$Long),
    get_passes
  )
  
  return(result)
}

# create df
ISS_data <- pass_times(capitals)

# reorder df
ISS_data <- ISS_data |>
  arrange(State, PassTime)

#pivoting on pass times to create one row per capital
ISS_data = ISS_data |> pivot_wider(names_from = PassNumber, values_from = PassTime, names_prefix = "Pass")
```

# Question 2 US State Capitols

```{r}
leaflet(data = capitals) |>
  addTiles() |>
  setView(lng = -98.5795, lat = 39.8283, zoom = 3) |>
  addMarkers(
    lng = ~Long,
    lat = ~Lat,
    popup = ~paste0(Capital, ", ", State)
  )
```

# Question 3 Icon

```{r}
icon <- makeIcon(
  iconUrl = "https://cdn1.iconfinder.com/data/icons/space-butterscotch-vol-2/256/Orbital_Station-1024.png",
  iconWidth = 20,
  iconHeight = 20
)


leaflet(data = capitals) |>
  addTiles() |>
  setView(lng = -98.5795, lat = 39.8283, zoom = 3) |>
  addMarkers(
    lng = ~Long,
    lat = ~Lat,
    popup = ~paste0(Capital, ", ", State),
    icon = icon
  )
```

# Question 4

```{r}

#formatting popups and labels as HTML for line breaks
popups <- paste0(ISS_data$State, ", ", ISS_data$Capital, "<br>",
                "Next 3 Passes: <br>",
                ISS_data$Pass1, " UTC", "<br>",
                   ISS_data$Pass2, " UTC",  "<br>",
                   ISS_data$Pass3, " UTC") |>
  lapply(htmltools::HTML)

labels <- paste0(ISS_data$State, ", ", ISS_data$Capital, "<br>",
                "Next Pass: <br>",
                ISS_data$Pass1, " UTC") |>
  lapply(htmltools::HTML)

leaflet(data = ISS_data) |>
  addTiles() |>
  setView(lng = -98.5795, lat = 39.8283, zoom = 3) |>
  addMarkers(
    lng = ~Longitude,
    lat = ~Latitude,
    label = ~labels,
    popup = ~popups,
    icon = icon
  ) 

```


# Question 5

```{r}

east_west <- ISS_data |>
  arrange(Pass1)

leaflet(data = ISS_data) |>
  addTiles() |>
  setView(lng = -98.5795, lat = 39.8283, zoom = 3) |>
  addMarkers(
    lng = ~Longitude,
    lat = ~Latitude,
    label = ~labels,
    popup = ~popups,
    icon = icon
  ) |>
  addPolylines(data = east_west, lat = ~Latitude,
               lng = ~Longitude,
               color = "red",
               weight = 2)



```
